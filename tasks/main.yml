---
# Copyright (C) 2018-2020 Robert Wimmer
# SPDX-License-Identifier: GPL-3.0-or-later

- name: Gather instance facts
  ansible.builtin.setup:

- name: Include tasks depending on OS
  ansible.builtin.include_tasks:
    file: "{{ item }}"
    apply:
      tags:
        - wg-install
  with_first_found:
    - "setup-{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version }}.yml"
    - "setup-{{ ansible_distribution|lower }}-{{ ansible_distribution_version }}.yml"
    - "setup-{{ ansible_distribution|lower }}-{{ ansible_distribution_release }}.yml"
    - "setup-{{ ansible_distribution|lower }}.yml"
    - "setup-{{ ansible_os_family|lower }}.yml"
  tags:
    - wg-install
  when: ansible_facts['ansible_' + wireguard_interface] is not defined

- name: Enable WireGuard kernel module
  community.general.modprobe:
    name: wireguard
    state: present
  register: wireguard__register_module_enabled
  until: wireguard__register_module_enabled is succeeded
  retries: 10
  delay: 10
  failed_when: wireguard__register_module_enabled is failure
  tags:
    - wg-install
  when: not ansible_os_family == 'Darwin'

# - name: Derive WireGuard public key
#   delegate_to: localhost
#   ansible.builtin.command: "wg pubkey"
#   args:
#     stdin: "{{ wireguard_private_key }}"
#   register: wireguard__register_public_key
#   changed_when: false
#   check_mode: false
#   tags:
#     - wg-config

# - name: Set public key fact
#   delegate_to: localhost
#   ansible.builtin.set_fact:
#     wireguard__public_key: "{{ wireguard__register_public_key.stdout }}"
#   tags:
#     - wg-config

- name: Create WireGuard configuration directory
  become: true
  ansible.builtin.file:
    dest: "{{ wireguard_remote_directory }}"
    state: directory
    mode: 0700
  tags:
    - wg-config

- name: Generate Server WireGuard configuration file
  ansible.builtin.template:
    src: etc/wireguard/wg_server.conf.j2
    dest: "{{ wireguard_remote_directory }}/{{ wireguard_interface }}.conf"
    owner: "{{ wireguard_conf_owner }}"
    group: "{{ wireguard_conf_group }}"
    mode: "{{ wireguard_conf_mode }}"
  become: true
  when: wireguard_server | default(false)
  tags:
    - wg-config
  notify:
    - reconfigure wireguard

- name: Generate Client Wireguard configuration file
  ansible.builtin.template:
    src: etc/wireguard/wg_client.conf.j2
    dest: "{{ wireguard_remote_directory }}/{{ wireguard_interface }}.conf"
    owner: "{{ wireguard_conf_owner }}"
    group: "{{ wireguard_conf_group }}"
    mode: "{{ wireguard_conf_mode }}"
  become: true
  when: not wireguard_server | default(false)
  tags:
    - wg-config
  notify:
    - reconfigure wireguard

- name: Ensure legacy reload-module-on-update is absent
  ansible.builtin.file:
    dest: "{{ wireguard_remote_directory }}/.reload-module-on-update"
    state: absent
  tags:
    - wg-config

- name: Start and enable WireGuard service
  become: true
  ansible.builtin.service:
    name: "wg-quick@{{ wireguard_interface }}"
    state: "{{ wireguard_service_state }}"
    enabled: "{{ wireguard_service_enabled }}"
  when: not ansible_os_family == 'Darwin'
